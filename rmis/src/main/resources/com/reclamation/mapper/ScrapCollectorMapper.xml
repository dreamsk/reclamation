<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reclamation.mapper.ScrapCollectorMapper">
  <resultMap id="BaseResultMap" type="com.reclamation.scrapCollector.domain.ScrapCollector">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="idCard" jdbcType="VARCHAR" property="idCard" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="housing_estate_code" jdbcType="VARCHAR" property="housingEstateCode" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="income" jdbcType="BIGINT" property="income" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <association property="sexval" column="{code=sex}" select="com.reclamation.mapper.SysDictMapper.getSexValByCode"/>
    <association property="housingEstate" column="{code=housing_estate_code}" select="com.reclamation.mapper.HousingEstateMapper.getHousingEstateByCode"/>
    <association property="provinceCode" column="{code=housing_estate_code}" select="com.reclamation.mapper.HousingEstateMapper.getProvinceCodeByCode"/>
    <association property="cityCode" column="{code=housing_estate_code}" select="com.reclamation.mapper.HousingEstateMapper.getCityCodeByCode"/>
    <association property="provinceName" column="{code=housing_estate_code}" select="com.reclamation.mapper.HousingEstateMapper.getProvinceAndCityNameByCode"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, idCard, tel, housing_estate_code, openid, income, create_time
  </sql>
  <select id="selectByExample" parameterType="com.reclamation.scrapCollector.domain.ScrapCollectorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scrap_collector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scrap_collector
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scrap_collector
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.reclamation.scrapCollector.domain.ScrapCollectorExample">
    delete from scrap_collector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.reclamation.scrapCollector.domain.ScrapCollector">
    insert into scrap_collector (id, name, sex, 
      idCard, tel, housing_estate_code, 
      openid, income, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{housingEstateCode,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{income,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.reclamation.scrapCollector.domain.ScrapCollector">
    insert into scrap_collector
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idCard != null">
        idCard,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="housingEstateCode != null">
        housing_estate_code,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="income != null">
        income,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="housingEstateCode != null">
        #{housingEstateCode,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="income != null">
        #{income,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.reclamation.scrapCollector.domain.ScrapCollectorExample" resultType="java.lang.Long">
    select count(*) from scrap_collector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scrap_collector
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        idCard = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.housingEstateCode != null">
        housing_estate_code = #{record.housingEstateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null">
        income = #{record.income,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scrap_collector
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      idCard = #{record.idCard,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      housing_estate_code = #{record.housingEstateCode,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.reclamation.scrapCollector.domain.ScrapCollector">
    update scrap_collector
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        idCard = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="housingEstateCode != null">
        housing_estate_code = #{housingEstateCode,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="income != null">
        income = #{income,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.reclamation.scrapCollector.domain.ScrapCollector">
    update scrap_collector
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      idCard = #{idCard,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      housing_estate_code = #{housingEstateCode,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      income = #{income,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getPageList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from scrap_collector
    <where>
      <if test="subSQL != null and subSQL != ''">
        ${subSQL}
      </if>
      <if test="search != null and search != ''">
        INSTR(ifnull(name,''),'${search}') > 0
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKeys">
    delete from scrap_collector where id in
    <foreach collection="idlist" item="id" index="index" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>
</mapper>