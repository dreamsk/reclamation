<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--配置自定义的realm-->
	<bean id="myShiroRealm" class="com.reclamation.shiro.realm.MyShiroRealm">
		<property name="cacheManager" ref="memoryConstrainedCacheManager" />
	</bean>

	<!--shiro的缓存-->
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager">
	</bean>
	<!--权限管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm"/>
	</bean>
	<!--设置shiro的filter  设置用户角色和权限校验逻辑-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/admin/login.jsp"/>
		<!-- 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为main.jsp了) -->
		<!-- <property name="successUrl" value="/system/main"/> -->
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<!-- 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp -->
		<property name="unauthorizedUrl" value="/admin/no-perm.jsp"/>
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- 此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->
		<!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 不需要验证 -->
				/admin/login.jsp = anon
				/admin/no-perm.jsp = anon
				<!-- 需要验证 -->
				/admin/index.jsp = authc
				/admin/system-menu-list.jsp = authc,perms["system-menu-list"]
				/admin/system-role-list.jsp = authc,perms["system-role-list"]
				/admin/system-admin-list.jsp = authc,perms["system-admin-list"]
				/admin/scrap-list.jsp = authc,perms["scrap-list"]
				/admin/scrap-collector-list.jsp = authc,perms["scrap-collector-list"]
				/admin/owner-list.jsp = authc,perms["owner-list"]
				/admin/reclamation-order-list.jsp = authc,perms["reclamation-order-list"]
				/admin/housing-estate-list.jsp = authc,perms["housing-estate-list"]
				/admin/system-dict-list.jsp = authc,perms["system-dict-list"]
				/** = anon
			</value>
		</property>
	</bean>




</beans>
