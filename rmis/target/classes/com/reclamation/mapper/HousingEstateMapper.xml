<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reclamation.mapper.HousingEstateMapper">
  <resultMap id="BaseResultMap" type="com.reclamation.housingEstate.domain.HousingEstate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="VARCHAR" property="quantity" />
    <result column="province_code" jdbcType="VARCHAR" property="provinceCode" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <association property="provinceName" column="{areaCode=province_code}" select="com.reclamation.mapper.AreaMapper.getNameByCode"/>
    <association property="cityName" column="{areaCode=city_code}" select="com.reclamation.mapper.AreaMapper.getNameByCode"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, quantity, province_code, city_code, address
  </sql>
  <select id="selectByExample" parameterType="com.reclamation.housingEstate.domain.HousingEstateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from housing_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from housing_estate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from housing_estate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.reclamation.housingEstate.domain.HousingEstateExample">
    delete from housing_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.reclamation.housingEstate.domain.HousingEstate">
    insert into housing_estate (id, code, name, 
      quantity, province_code, city_code, 
      address)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=VARCHAR}, #{provinceCode,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.reclamation.housingEstate.domain.HousingEstate">
    insert into housing_estate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="provinceCode != null">
        province_code,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null">
        #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.reclamation.housingEstate.domain.HousingEstateExample" resultType="java.lang.Long">
    select count(*) from housing_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update housing_estate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceCode != null">
        province_code = #{record.provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update housing_estate
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=VARCHAR},
      province_code = #{record.provinceCode,jdbcType=VARCHAR},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.reclamation.housingEstate.domain.HousingEstate">
    update housing_estate
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="provinceCode != null">
        province_code = #{provinceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.reclamation.housingEstate.domain.HousingEstate">
    update housing_estate
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getPageList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from housing_estate
    <where>
      <if test="subSQL != null and subSQL != ''">
        ${subSQL}
      </if>
      <if test="search != null and search != ''">
        INSTR(ifnull(name,''),'${search}') > 0
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKeys">
    delete from housing_estate where id in
    <foreach collection="idlist" item="id" index="index" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <select id="getHousingEstateByCode" resultType="java.lang.String">
    select name from housing_estate where code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getHousingEstateByCityCode" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from housing_estate where city_code = #{cityCode,jdbcType=VARCHAR}
  </select>

  <select id="getCityCodeByCode" resultType="java.lang.String">
    SELECT province_code FROM housing_estate WHERE code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getProvinceCodeByCode" resultType="java.lang.String">
    SELECT city_code FROM housing_estate WHERE code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getProvinceAndCityNameByCode" resultType="java.lang.String">
    SELECT CONCAT(a0.area_name,'-',a1.area_name) FROM housing_estate h
          LEFT JOIN area a0 ON a0.area_code = h.province_code
          LEFT JOIN area a1 ON a1.area_code = h.city_code
    WHERE h.code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getProvinceAndCityAndHousingEstateNameByCode" resultType="java.lang.String">
    SELECT CONCAT(a0.area_name,'-',a1.area_name,'-',h.name) FROM housing_estate h
          LEFT JOIN area a0 ON a0.area_code = h.province_code
          LEFT JOIN area a1 ON a1.area_code = h.city_code
    WHERE h.code = #{code,jdbcType=VARCHAR}
  </select>


</mapper>